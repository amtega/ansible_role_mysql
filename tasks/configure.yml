---
# Role tasks
- name: Try set password for first installation
  block:
    - name: Estract temporary password for mysql 57 or 80
      shell: "grep 'temporary password' /var/log/mysqld.log | awk '{ print $NF }'"
      changed_when: no
      register: mysql_extract_password

    - name: Set root password for localhost
      mysql_user:
        login_user: root
        login_password: "{{ mysql_extract_password.stdout }}"
        user: "{{ mysql_root_user }}"
        password: "{{ mysql_root_password }}"
  rescue:
    - debug:
        msg: ' {{ mysql_root_user }} password is already set'

- name: Secure all root acounts
  mysql_user:
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password}}"
    user: "{{ mysql_root_user }}"
    password: "{{ mysql_root_password}}"
    host: "{{ mysql_host_allowed }}"
  loop: "{{ mysql_root_allowed_hosts }}"
  loop_control:
    loop_var: mysql_host_allowed

- name: Delete all anonymous users
  mysql_user:
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password}}"
    user: ""
    host_all: yes
    state: absent

- name: Create Backup user
  mysql_user:
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password}}"
    user: "{{ mysql_backup_user }}"
    password: "{{ mysql_backup_password}}"
    priv: "{{ mysql_backup_priv }}"
  when: mysql_backup_user is defined

- name: Create .my.cnf file with root password credentials
  template:
    src: user.my.cnf.j2
    dest: '/root/.my.cnf'
  when: mysql_create_user_autologin

- name: Remove test database
  mysql_db:
   name: test
   state: absent
