---

dependency:
  name: galaxy
  enabled: yes
  options:
    ignore-certs: yes
    ignore-errors: yes
    role-file: >-
      ${MOLECULE_SCENARIO_DIRECTORY}/../resources/requirements.yml
    requirements-file: >-
      ${MOLECULE_SCENARIO_DIRECTORY}/../resources/requirements.yml
driver:
  name: docker
lint: "${MOLECULE_SCENARIO_DIRECTORY}/../resources/linters.sh"
platforms:
  - name: "mysql-primary-${INSTANCE_UUID:-1}"
    image: quay.io/centos/centos:stream8
    command: /sbin/init
    exposed_ports: ['3306']
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - molecule_hosts
      - molecule_hosts_centos
      - molecule_hosts_centos_7
      - molecule_hosts_mysql_primary
  - name: "mysql-replica-${INSTANCE_UUID:-1}"
    image: quay.io/centos/centos:stream8
    command: /sbin/init
    exposed_ports: ['3306']
    tmpfs:
      - /run
      - /tmp
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - molecule_hosts
      - molecule_hosts_centos
      - molecule_hosts_centos_7
      - molecule_hosts_mysql_replica
provisioner:
  name: ansible
  playbooks:
    cleanup: ../resources/cleanup.yml
    side_effect: ../resources/side_effect.yml
  config_options:
    defaults:
      callbacks_enabled: profile_tasks
      action_plugins: $PWD/action_plugins
  inventory:
    group_vars:
      molecule_hosts_mysql_primary:
        mysql_server_id: "1"

      molecule_hosts_mysql_replica:
        mysql_server_id: "2"
        mysql_replication_primary: "{{ groups.molecule_hosts_mysql_primary.0 }}"
        mysql_replication_primary_port: 3306

      molecule_hosts:
        mysql_version: 8.0
        mysql_replication: yes
        mysql_replication_user: replica
        mysql_replication_password: t3str3pl1c4  # pragma: allowlist secret
        mysql_root_user: root
        mysql_root_password: t3stp4ssw0rd  # pragma: allowlist secret
        mysql_root_allowed_hosts:
          - localhost
        mysql_no_log: no
verifier:
  name: ansible
